name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-fund --no-audit
          fi

      - name: Run fetch-scholar script (generate publications)
        env:
          CI: true
        run: |
          # Generate/refresh data/publications.scholar.json so the site can read it during build
          node ./scripts/fetch-scholar.js || echo "fetch-scholar failed; proceeding without updated publications"

      - name: Build Next.js static site
        env:
          NODE_ENV: production
          # Map repository secrets so build scripts that look for a GitHub token
          # (scripts/generate-github-pages*.mjs, generate-github-projects.mjs) can
          # authenticate and avoid rate limiting. User stores the token as GH_TOKEN.
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          npm run build
          # Prevent GitHub Pages from processing the site with Jekyll
          touch out/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
